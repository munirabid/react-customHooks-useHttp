{"ast":null,"code":"var _jsxFileName = \"C:\\\\Muneer\\\\React\\\\react-custom-hooks\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"./../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: \"https://task-596f0-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\n      method: \"POST\",\n      body: JSON.stringify({\n        text: taskText\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    try {\n      const response = await fetch(\"https://task-596f0-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {//setError(err.message || \"Something went wrong!\");\n    } //setIsLoading(false);\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"e+CZgtYWzn/WEePX8yQWKpC3/rg=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["C:/Muneer/React/react-custom-hooks/src/components/NewTask/NewTask.js"],"names":["Section","TaskForm","useHttp","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","enterTaskHandler","taskText","url","method","body","JSON","stringify","text","headers","response","fetch","ok","Error","data","json","generatedId","name","createdTask","id","onAddTask","err"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAqDN,OAAO,EAAlE;;AAEA,QAAMO,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAC3CF,IAAAA,eAAe,CAAC;AACdG,MAAAA,GAAG,EAAE,8EADS;AAGZC,MAAAA,MAAM,EAAE,MAHI;AAIZC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,IAAI,EAAEN;AAAR,OAAf,CAJM;AAKZO,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AALG,KAAD,CAAf;;AAWA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8EAD0B,EAE1B;AACEP,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAEN;AAAR,SAAf,CAFR;AAGEO,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHX,OAF0B,CAA5B;;AAWA,UAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAGF,IAAI,CAACG,IAAzB,CAlBE,CAkB6B;;AAC/B,YAAMC,WAAW,GAAG;AAAEC,QAAAA,EAAE,EAAEH,WAAN;AAAmBR,QAAAA,IAAI,EAAEN;AAAzB,OAApB;AAEAN,MAAAA,KAAK,CAACwB,SAAN,CAAgBF,WAAhB;AACD,KAtBD,CAsBE,OAAOG,GAAP,EAAY,CACZ;AACD,KApC0C,CAqC3C;;AACD,GAtCD;;AAwCA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEpB,gBAAvB;AAAyC,MAAA,OAAO,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjDD;;GAAMH,O;UACuDD,O;;;KADvDC,O;AAmDN,eAAeA,OAAf","sourcesContent":["import Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"./../../hooks/use-http\";\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest } = useHttp();\n\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest({\n      url: \"https://task-596f0-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\n      \n        method: \"POST\",\n        body: JSON.stringify({ text: taskText }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      },\n\n    );\n    try {\n      const response = await fetch(\n        \"https://task-596f0-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      //setError(err.message || \"Something went wrong!\");\n    }\n    //setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}